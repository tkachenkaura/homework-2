public class SinglyLinkedList
{
    private class ListNode
    {
        public object Value;
        public ListNode Next;

        public ListNode(object value)
        {
            Value = value;
            Next = null;
        }
    }

    private ListNode _head;
    private ListNode _tail;
    private int _count;

    public SinglyLinkedList()
    {
        _head = null;
        _tail = null;
        _count = 0;
    }

    public int Count => _count;

    public void Add(object item)
    {
        ListNode newNode = new ListNode(item);
        if (_head == null)
        {
            _head = newNode;
            _tail = newNode;
        }
        else
        {
            _tail.Next = newNode;
            _tail = newNode;
        }
        _count++;
    }

    public void AddFirst(object item)
    {
        ListNode newNode = new ListNode(item);
        if (_head == null)
        {
            _head = newNode;
            _tail = newNode;
        }
        else
        {
            newNode.Next = _head;
            _head = newNode;
        }
        _count++;
    }

    public void Insert(int index, object item)
    {
        if (index < 0 || index > _count)
            throw new ArgumentOutOfRangeException(nameof(index));

        if (index == 0)
        {
            AddFirst(item);
        }
        else if (index == _count)
        {
            Add(item);
        }
        else
        {
            ListNode current = GetNodeAtIndex(index - 1);
            ListNode newNode = new ListNode(item);
            newNode.Next = current.Next;
            current.Next = newNode;
            _count++;
        }
    }

    public void Clear()
    {
        _head = null;
        _tail = null;
        _count = 0;
    }

    public bool Contains(object item)
    {
        ListNode current = _head;
        while (current != null)
        {
            if (Equals(current.Value, item))
                return true;
            current = current.Next;
        }
        return false;
    }

    public object[] ToArray()
    {
        object[] array = new object[_count];
        ListNode current = _head;
        int index = 0;
        while (current != null)
        {
            array[index++] = current.Value;
            current = current.Next;
        }
        return array;
    }

    private ListNode GetNodeAtIndex(int index)
    {
        if (index < 0 || index >= _count)
            throw new ArgumentOutOfRangeException(nameof(index));

        ListNode current = _head;
        for (int i = 0; i < index; i++)
        {
            current = current.Next;
        }
        return current;
    }
}
